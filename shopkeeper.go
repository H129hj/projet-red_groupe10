package projetred

import (
	"fmt"
	"math/rand"
)

func Shopkeeper(c *Character) Character {
	randomvalue := 50 + rand.Intn(101)
	for {
		fmt.Println("\n====================")
		fmt.Println("   üè™ Kwik-E-Mart d'Apu")
		fmt.Println("====================")
		fmt.Println("üáÆüá≥ Apu : 'Bonjour mon ami ! Que puis-je faire pour vous ?'")
		fmt.Println("1. Acheter un objet")
		fmt.Println("2. Vendre un objet")
		fmt.Println("3. Am√©liorer un objet")
		fmt.Println("4. Quitter le magasin")
		fmt.Println("--------------------")
		fmt.Println("üí∞ Vous avez", c.gold, "dollars dans votre tirelire.")
		fmt.Print("üëâ Que voulez-vous faire ? ")

		var choice string
		fmt.Scan(&choice)

		switch choice {
		case "1":
			fmt.Println("\n--- üõçÔ∏è Objets en vente chez Apu ---")
			fmt.Println("1. Batte de baseball de Bart (50 dollars)")
			fmt.Println("2. Bouclier fait maison (40 dollars)")
			fmt.Println("3. Donut magique de chez Homer (10 dollars)")
			fmt.Println("4. Carte rare Itchy & Scratchy (", randomvalue, " dollars)")
			fmt.Println("5. Retour au menu d'Apu")
			fmt.Println("------------------------------------")
			fmt.Println("üí∞ Argent actuel :", c.gold, "dollars")
			fmt.Print("üëâ Quel objet souhaitez-vous acheter ? ")

			var choice2 string
			fmt.Scan(&choice2)

			switch choice2 {
			case "1":
				if c.gold >= 50 {
					c.inventory = append(c.inventory, "Batte de baseball")
					c.gold -= 50
					fmt.Println("‚úÖ Apu : 'Excellente arme ! Il vous reste", c.gold, "dollars.'")
				} else {
					fmt.Println("‚ùå Apu : 'D√©sol√©, pas assez d'argent mon ami !'")
				}
			case "2":
				if c.gold >= 40 {
					c.inventory = append(c.inventory, "Bouclier fait maison")
					c.gold -= 40
					fmt.Println("‚úÖ Apu : 'Protection garantie ! Il vous reste", c.gold, "dollars.'")
				} else {
					fmt.Println("‚ùå Apu : 'Vos poches sont vides comme le frigo des Simpson !'")
				}
			case "3":
				if c.gold >= 10 {
					c.inventory = append(c.inventory, "Donut magique")
					c.gold -= 10
					fmt.Println("‚úÖ Apu : 'Mmm... donut magique ! Il vous reste", c.gold, "dollars.'")
				} else {
					fmt.Println("‚ùå Apu : 'M√™me pas 10 dollars ? Allez voir Homer !'")
				}
			case "4":
				if c.gold >= randomvalue {
					c.inventory = append(c.inventory, "Carte Itchy & Scratchy")
					c.gold -= randomvalue
					fmt.Println("‚úÖ Apu : 'Carte tr√®s rare ! Il vous reste", c.gold, "dollars.'")
				} else {
					fmt.Println("‚ùå Apu : 'Cette carte co√ªte plus cher que le salaire de Homer !'")
				}
			case "5":
				fmt.Println("‚Ü© Apu : 'Tr√®s bien, tr√®s bien...'")
			default:
				fmt.Println("‚ùå Apu : 'Je ne comprends pas, parlez plus clairement !'")
			}

		case "2":
			if len(c.inventory) == 0 {
				fmt.Println("‚ö† Apu : 'Vous n'avez rien √† vendre, revenez plus tard !'")
				continue
			}
			fmt.Println("\n--- üí∏ Apu rach√®te vos objets ---")
			for i, v := range c.inventory {
				fmt.Printf("%d. %s\n", i+1, v)
			}
			fmt.Print("üëâ Apu : 'Quel objet voulez-vous vendre ?' ")

			var sellChoice int
			fmt.Scan(&sellChoice)
			if sellChoice < 1 || sellChoice > len(c.inventory) {
				fmt.Println("‚ùå Apu : 'Num√©ro invalide, comptez mieux que √ßa !'")
				continue
			}

			itemToSell := c.inventory[sellChoice-1]
			var sellPrice int
			switch itemToSell {
			case "Batte de baseball":
				sellPrice = 25
			case "Bouclier fait maison":
				sellPrice = 20
			case "Donut magique":
				sellPrice = 5
			case "Carte Itchy & Scratchy":
				sellPrice = randomvalue
			default:
				sellPrice = 1
			}
			c.inventory = append(c.inventory[:sellChoice-1], c.inventory[sellChoice:]...)
			c.gold += sellPrice
			fmt.Printf("üí∏ Apu : 'J'ai achet√© votre %s pour %d dollars. Solde : %d dollars.'\n", itemToSell, sellPrice, c.gold)

		case "3":
			if len(c.inventory) == 0 {
				fmt.Println("‚ö† Apu : 'Aucun objet √† am√©liorer dans vos poches !'")
				continue
			}
			fmt.Println("\n--- üîß Atelier d'am√©lioration d'Apu ---")
			for i, v := range c.inventory {
				fmt.Printf("%d. %s\n", i+1, v)
			}
			fmt.Print("üëâ Apu : 'Quel objet voulez-vous que j'am√©liore ?' ")

			var upgradeChoice int
			fmt.Scan(&upgradeChoice)
			if upgradeChoice < 1 || upgradeChoice > len(c.inventory) {
				fmt.Println("‚ùå Apu : 'Mauvais num√©ro, essayez encore !'")
				continue
			}

			itemToUpgrade := c.inventory[upgradeChoice-1]
			var upgradeCost int
			switch itemToUpgrade {
			case "Batte de baseball":
				upgradeCost = 30
			case "Bouclier fait maison":
				upgradeCost = 25
			default:
				fmt.Println("‚ö† Apu : 'Cet objet ne peut pas √™tre am√©lior√©, d√©sol√© !'")
				continue
			}

			if c.gold >= upgradeCost {
				c.gold -= upgradeCost
				c.inventory[upgradeChoice-1] = itemToUpgrade + " +1"
				fmt.Printf("‚ú® Apu : 'Votre %s est maintenant am√©lior√© pour %d dollars !'\n", itemToUpgrade, upgradeCost)
			} else {
				fmt.Println("‚ùå Apu : 'Pas assez d'argent pour cette am√©lioration !'")
			}

		case "4":
			fmt.Println("\nüëã Apu : 'Merci pour votre visite ! Revenez vite au Kwik-E-Mart !'")
			Menu(*c)
			return *c

		default:
			fmt.Println("‚ùå Apu : 'Je ne comprends pas votre choix, mon ami !'")
		}
	}
}
